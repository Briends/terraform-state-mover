name: CI

on:
  - push
  - pull_request

jobs:

  nix-build:
    name: Nix build
    runs-on: ubuntu-beta
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
      - name: Build dependencies
        run: nix develop --command ghc --version
      - name: Build terraform-state-mover
        run: nix build -L
      - name: Build terraform-state-mover shell
        run: nix build -L '.#devShells.x86_64-linux.default'

  stack-build:
    name: Stack ${{ matrix.resolver }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        resolver: [ nightly, lts-21]
        os: [ ubuntu-beta, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        with:
          enable-stack: true
      ## For some reason, stack caching seems to be very brittle, and cause a lot of build failures.
      ## I haven't investigated very thoroughly what to best do about this, but for now, I'm just not caching stack builds.
      - run: stack init --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --only-dependencies
      - run: stack build --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --haddock --test --bench --no-run-benchmarks

  cabal-build:
    name: Cabal with GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: [ '8.6.5', '8.8.3', '8.10.7', '9.0.2', '9.2.8', '9.4.6' ]
        os: [ ubuntu-beta, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cabal
            dist-newstyle
          key: cabal-cache-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal') }}
      - run: cabal new-build --only-dependencies
      - run: cabal new-build
      - run: cabal new-test --test-show-details=direct
